@model Loader.Models.ApplicationUser

@{ 
    var title = "Reset Password";
    Layout = Request.IsAjaxRequest() ? null : "~/Views/Shared/_Layout.cshtml";
}

<div class="box box-warning create-user">
    <div class="box-header with-border">
        <h3 class="box-title">@title</h3>
        <div class="box-tools pull-right">
            <button class="btn btn-box-tool" data-widget="collapse"> <i class="fa fa-minus"></i></button>
            <button class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
        </div><!-- /.box-tools -->
    </div>

    @using(Html.BeginForm("_userpasswordReset", "Users", FormMethod.Post, new { @id = "createUser" }))
     {
        <div class="box-body">
            @Html.AntiForgeryToken()
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group col-md-12">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2", autocomplete = "off" })
                    <div class="col-md-4">
                        @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @id = "Email", autocomplete = "off", @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-12">
                    @Html.Label("User Name", htmlAttributes: new { @class = "control-label col-md-2", autocomplete = "off" })
                    <div class="col-md-4">
                        @Html.TextBoxFor(model => model.UserName, new { @class = "form-control", @id = "UserName", autocomplete = "off", @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-12">
                    @Html.Label("New Password", null, htmlAttributes: new { @class = "control-label col-md-2"})
                    <div class="col-md-4">
                        @Html.TextBox("NewPassword", null, new { require = "required", @class = "form-control", @placeholder = "NewPassword", @type = "password", @id = "NewPassword" })
                        @*@Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })*@
                    </div>
                </div>

                <div class="form-group col-md-12">
                    @Html.Label("Confirm Password", null, htmlAttributes: new { @class = "control-label col-md-2"})
                    <div class="col-md-4">
                        @Html.TextBox("ConfirmPassword", null, new { require = "required", @class = "form-control", @placeholder = "ConfirmPassword", @type = "password", @id = "ConfirmPassword" })
                        @*@Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })*@
                    </div>
                </div>

            </div>
        </div>

        <div class="box-footer">
            <div>
                <a href="/Home" class="btn btn-default">Back</a>
            </div>
            <div class="col-md-offset-11">
                <input type="submit" id="btnSubmit" value="Reset" class="btn btn-primary" />
            </div>
        </div>
     }
</div>


<script type="text/javascript">
    $("#createUser").submit(function () {
        var form = $(this);
        form.validate();
        if (form.validate == false) {
            ErrorAlert("The required field is required.", 15000);
            return false;
        }

        var userName = form.find("#UserName").val();
        if (userName == null) {
            ErrorAlert("UserName field is empty!!", 15000);
            return false
        }

        var email = form.find("#Email").val();
        if (email == null) {
            ErrorAlert("Email field is empty!!", 15000);
            return false;
        }

        var password = form.find("#NewPassword").val();
        if (password == null) {
            ErrorAlert("password field is empty!!", 15000);
            return false;
        }

        var confirmPassword = form.find("#ConfirmPassword").val();
        if (confirmPassword == null) {
            ErrorAlert("ConfirmPassword field is empty!!", 15000);
            return false;
        }

        $.MessageBox({
            buttonDone: "Yes",
            buttonFail: "No",
            message: "Are you sure, you want to reset password?"
        }).done(function () {
            const form = ("#createUser")[0];
            var data = new FormData(form);
            $.ajax({
                type: 'POST',
                url: '@Url.Action("_userpasswordReset", "User")',
                data: data,
                success: function (data) {
                    SuccessAlert("Password Changed Successfully.", 1500);
                },
                error: function (data) {
                    ErrorAlert(data.responseText, 15000)
                }
            })
        })

    })
</script>

